/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.poiu.nbca.config;

import de.poiu.nbca.CmdlineParser;
import de.poiu.nbca.Prefs;
import de.poiu.nbca.ParseException;
import java.util.logging.Logger;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.openide.util.NbPreferences;

import static de.poiu.nbca.Prefs.OPTION_EDIT_EXTERNALLY_CMD;
import static de.poiu.nbca.Prefs.PREFS_PREFIX;


final class CustomActions2Panel extends javax.swing.JPanel {

  private static final Logger LOGGER= Logger.getLogger(CustomActions2Panel.class.getName());

  private final CustomActions2OptionsPanelController controller;


  CustomActions2Panel(CustomActions2OptionsPanelController controller) {
    this.controller = controller;
    initComponents();
    // listen to changes in form fields and call controller.changed()
    addListeners();
  }

  private void addListeners() {
    this.tfEditExternallyCmd.getDocument().addDocumentListener(new DocumentListener() {
      @Override
      public void insertUpdate(DocumentEvent e) {
        controller.changed();
        updateErrorMessages();
      }


      @Override
      public void removeUpdate(DocumentEvent e) {
        controller.changed();
        updateErrorMessages();
      }


      @Override
      public void changedUpdate(DocumentEvent e) {
        controller.changed();
        updateErrorMessages();
      }
    });
  }


  private void updateErrorMessages() {
    try {
      CmdlineParser.parse(this.tfEditExternallyCmd.getText().trim());
      this.lblErrorMessages.setText("");
    } catch (Exception ex) {
      this.lblErrorMessages.setText(ex.getMessage());
    }
  }


  /**
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    lblEditExternallyCmd = new javax.swing.JLabel();
    tfEditExternallyCmd = new javax.swing.JTextField();
    lblErrorMessages = new javax.swing.JLabel();

    org.openide.awt.Mnemonics.setLocalizedText(lblEditExternallyCmd, org.openide.util.NbBundle.getMessage(CustomActions2Panel.class, "CustomActions2Panel.lblEditExternallyCmd.text")); // NOI18N

    tfEditExternallyCmd.setText(org.openide.util.NbBundle.getMessage(CustomActions2Panel.class, "CustomActions2Panel.tfEditExternallyCmd.text")); // NOI18N

    lblErrorMessages.setForeground(new java.awt.Color(255, 0, 0));
    org.openide.awt.Mnemonics.setLocalizedText(lblErrorMessages, org.openide.util.NbBundle.getMessage(CustomActions2Panel.class, "CustomActions2Panel.lblErrorMessages.text")); // NOI18N

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(lblErrorMessages, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(lblEditExternallyCmd)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfEditExternallyCmd, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblEditExternallyCmd)
          .addComponent(tfEditExternallyCmd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
        .addComponent(lblErrorMessages)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents


  void load() {
    // TODO read settings and initialize GUI
    // Example:
    // someCheckBox.setSelected(Preferences.userNodeForPackage(CustomActions2Panel.class).getBoolean("someFlag", false));
    // or for org.openide.util with API spec. version >= 7.4:
    // someCheckBox.setSelected(NbPreferences.forModule(CustomActions2Panel.class).getBoolean("someFlag", false));
    // or:
    // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());

    this.tfEditExternallyCmd.setText(NbPreferences.forModule(Prefs.class)
      .get(PREFS_PREFIX + OPTION_EDIT_EXTERNALLY_CMD, ""));
  }


  void store() {
    // TODO store modified settings
    // Example:
    // Preferences.userNodeForPackage(CustomActions2Panel.class).putBoolean("someFlag", someCheckBox.isSelected());
    // or for org.openide.util with API spec. version >= 7.4:
    // NbPreferences.forModule(CustomActions2Panel.class).putBoolean("someFlag", someCheckBox.isSelected());
    // or:
    // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
    NbPreferences.forModule(Prefs.class)
      .put(PREFS_PREFIX + OPTION_EDIT_EXTERNALLY_CMD, this.tfEditExternallyCmd.getText());
  }


  boolean valid() {
    try {
      CmdlineParser.parse(this.tfEditExternallyCmd.getText());
      return true;
    } catch (ParseException ex) {
      return false;
    }
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel lblEditExternallyCmd;
  private javax.swing.JLabel lblErrorMessages;
  private javax.swing.JTextField tfEditExternallyCmd;
  // End of variables declaration//GEN-END:variables

}
